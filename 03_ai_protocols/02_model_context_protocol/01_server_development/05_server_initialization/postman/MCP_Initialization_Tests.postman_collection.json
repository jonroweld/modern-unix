{
  "info": {
    "_postman_id": "mcp-init-tests-2025",
    "name": "MCP Initialization Tests",
    "description": "Complete test suite for Model Context Protocol initialization according to MCP 2025-03-26 specification",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "✅ Success Flow",
      "item": [
        {
          "name": "1. Initialize MCP Server",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Test initialization response",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Content-Type is text/event-stream\", function () {",
                  "    pm.expect(pm.response.headers.get('Content-Type')).to.include('text/event-stream');",
                  "});",
                  "",
                  "pm.test(\"Session ID header present\", function () {",
                  "    const sessionId = pm.response.headers.get('mcp-session-id');",
                  "    pm.expect(sessionId).to.not.be.null;",
                  "    pm.collectionVariables.set('mcp_session_id', sessionId);",
                  "});",
                  "",
                  "pm.test(\"Valid SSE format response\", function () {",
                  "    const responseText = pm.response.text();",
                  "    pm.expect(responseText).to.include('data: ');",
                  "});",
                  "",
                  "pm.test(\"Protocol version matches\", function () {",
                  "    const responseText = pm.response.text();",
                  "    const dataLine = responseText.split('\\n').find(line => line.startsWith('data: '));",
                  "    if (dataLine) {",
                  "        const data = JSON.parse(dataLine.substring(6));",
                  "        if (data.result && data.result.protocolVersion) {",
                  "            pm.expect(data.result.protocolVersion).to.equal('2025-03-26');",
                  "        }",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Server capabilities present\", function () {",
                  "    const responseText = pm.response.text();",
                  "    const dataLine = responseText.split('\\n').find(line => line.startsWith('data: '));",
                  "    if (dataLine) {",
                  "        const data = JSON.parse(dataLine.substring(6));",
                  "        pm.expect(data.result).to.have.property('capabilities');",
                  "        pm.expect(data.result).to.have.property('serverInfo');",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json, text/event-stream"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"initialize\",\n    \"params\": {\n        \"protocolVersion\": \"2025-03-26\",\n        \"clientInfo\": {\n            \"name\": \"postman-test-client\",\n            \"version\": \"1.0.0\"\n        },\n        \"capabilities\": {\n            \"experimental\": {},\n            \"sampling\": {}\n        }\n    },\n    \"id\": 1\n}"
            },
            "url": {
              "raw": "http://localhost:8000/mcp/",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8000",
              "path": [
                "mcp",
                ""
              ]
            }
          }
        },
        {
          "name": "2. Send Initialized Notification",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json, text/event-stream"
              },
              {
                "key": "mcp-session-id",
                "value": "{{mcp_session_id}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"notifications/initialized\",\n    \"params\": {}\n}"
            },
            "url": {
              "raw": "http://localhost:8000/mcp/",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8000",
              "path": [
                "mcp",
                ""
              ]
            }
          }
        },
        {
          "name": "3. List Available Tools",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json, text/event-stream"
              },
              {
                "key": "mcp-session-id",
                "value": "{{mcp_session_id}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"tools/list\",\n    \"params\": {},\n    \"id\": 2\n}"
            },
            "url": {
              "raw": "http://localhost:8000/mcp/",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8000",
              "path": [
                "mcp",
                ""
              ]
            }
          }
        },
        {
          "name": "4. Call Weather Tool",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json, text/event-stream"
              },
              {
                "key": "mcp-session-id",
                "value": "{{mcp_session_id}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"tools/call\",\n    \"params\": {\n        \"name\": \"get_forecast\",\n        \"arguments\": {\n            \"city\": \"San Francisco\"\n        }\n    },\n    \"id\": 3\n}"
            },
            "url": {
              "raw": "http://localhost:8000/mcp/",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8000",
              "path": [
                "mcp",
                ""
              ]
            }
          }
        }
      ]
    },
    {
      "name": "❌ Error Scenarios",
      "item": [
        {
          "name": "Skip Initialization - Try Tools List",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Should fail without initialization\", function () {",
                  "    pm.expect(pm.response.code).to.be.greaterThan(399);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json, text/event-stream"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"tools/list\",\n    \"params\": {},\n    \"id\": 1\n}"
            },
            "url": {
              "raw": "http://localhost:8000/mcp/",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8000",
              "path": [
                "mcp",
                ""
              ]
            }
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "mcp_session_id",
      "value": ""
    }
  ]
}